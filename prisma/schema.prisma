// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// the ORM provider
generator client {
  provider = "prisma-client-js"
}
// which database used and the link through a .env file
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  // url       = "postgresql://postgres:password@localhost:5432/wayfinder"
}

// Overall things to understand in these models:
// @ = used to declare rules in the model
// default = the default action if the data is left as null. Mostly used to auto increment the IDs
// relation =  which attributes are connected to eachother, and with which reference
// ? = the field is not required
// [] = array

model User {
  id            String   @id @default(uuid()) // universal unique identifyer
  email         String   @unique
  passwordHash  String
  isAdmin       Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Node {
  id            Int @id @default(autoincrement())
  hasElevator   Boolean
  hasStairs     Boolean
  hasDoor       Boolean
  searchTags    String[]
  floor         Int
  building      String
  edgeId        Int[]     // This is sub-optimal. A better way would be to have a relation to the Edge model
  // edges         Edge[] // Like this, but the problem is that we can't both have multiple edges on the node and multiple nodes on the edge
}

model Edge {
  id            Int @id @default(autoincrement())
  nodeAId       Int       // This is sub-optimal. A better way would be to have a relation to the Node model
  // nodeA         Node
  nodeBId       Int       // This is sub-optimal. A better way would be to have a relation to the Node model
  // nodeB         Node
  weight        Int
  clearance     Int
  obstructed    Boolean
}

